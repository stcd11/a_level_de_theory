#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: 8 - Viability of Design Solutions
#+AUTHOR: C. Delport

#+BEGIN_HTML
<div class="github-fork-ribbon-wrapper left">
<div class="github-fork-ribbon">
<a href="https://github.com/stcd11/a_level_de_theory">Fork me on GitHub</a>
</div>
</div>
<center>
<img src='img/designsolutions.jpg' width=30%>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 
* Assess whether a design solution meets its stakeholder's requirementss
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
8.1a Critically evaluating how a design solution has met its intended requirements, including:

*i.* functionality.

The functionality of a product can be described as 'The purpose that something is designed or expected to fulfil'.

*ii.* ease of use and inclusivity of the solution.

Usability is the ease of use and learnability of a human-made object such as a tool or device. In software engineering, usability is the degree to which a software can be used by specified consumers to achieve quantified objectives with effectiveness, efficiency, and satisfaction in a quantified context of use.
 
*iii.* user needs.

Understanding user needs. ... 'User needs' are the needs that a user has of a service, and which that service must satisfy for the user to get the right outcome for them. Services designed around users and their needs: are more likely to be used.

8.1b Demonstrate an understanding of the needs and methods for testing design solutions with stakeholders throughout the design development, and when testing the success of a product or system.

The first step in user testing is to get in contact with the users of your solution. Go back to your problem statement, and remember your potential users. You will want to test your solution on this group of people. 

When it comes to testing, there is no such thing as too many testers! The more people that you are able to test with the more you will find out. So try to find as many users as you can who are willing to help you. A good goal to reach for is three to five users for each round of testing.

The second step, after you have located three to five users, is to present your solution to these users while the users are in the problem environment. The problem environment is the situation or atmosphere in which the problem you are trying to solve happens.

- If your solution is a product, give the product to the users in the environment where they would use it. For example, if you designed a pair of sunglasses, you would give your sunglasses to the users outside while the weather is sunny. You wouldn't ask them to try the sunglasses at night or indoors, because those aren't situations where they would be using sunglasses.
- If your solution is a website or software product, ask users to test it on computers. You wouldn't want to just show them pictures or explain the website, because how they interact with the computer itself is also important.
- If your solution is an environment or experience, place your user in that environment or experience, and see how they react. For example, if you designed an after-school program for students, invite users to attend this program or a mock version of it. However, in many cases, having your users actually visit your designed environment or go through your designed experience will not be possible. An example is a student who designed a new school bus but obviously does not have an actual bus to use for testing. In a case like this, use a storyboard to present your solution to the users.

The third and final step of user testing is observing the interaction between the user and your solution. Record your observations in your design notebook. Watch closely as people use your product, navigate your website, or go through your designed environment or experience. Listen to what they say, but also watch what they do, see how they react, note where or when they get confused, and write down everything that happens during their interaction with the solution. Below are three questions to ask during testing. The answers will be helpful when you move onto the redesign phase of test and redesign.

Are your users able to overcome the problem by using or interacting with your solution?
- If yes, why are they successful?
- If no, what problems do they encounter that prevent them from being successful?

Do the users ever need to ask you any questions when using or interacting with your solution?

- If yes, what questions do they ask? During what part of their interaction do they ask these questions?

Do the users interact with your solution exactly the way that you intended for them to?

- If no, what do they do differently?
- If you have measurable targets for your solution, did you meet them?

8.1c Demonstrate an understanding of the importance of testing the feasibility of getting a product to market including considerations of cost, packaging and appeal.

This assessment is based on an outline design of system requirements, to determine whether the company has the technical expertise to handle completion of the project. When writing a feasibility report, the following should be taken to consideration:

A brief description of the business to assess more possible factors which could affect the study

- The part of the business being examined
- The human and economic factor
- The possible solutions to the problem

At this level, the concern is whether the proposal is both technically feasible (assuming moderate cost).

The technical feasibility assessment is focused on gaining an understanding of the present technical resources of the organization and their applicability to the expected needs of the proposed system. It is an evaluation of the hardware and software and how it meets the need of the proposed system.

8.1d Understanding the relevant standards that need to be met and how to ensure these are delivered.

*i.* British Standards Institute (BSI).

Click [[https://www.standardsuk.com/download-british-standards/?gclid%3DCjwKCAjw6-_eBRBXEiwA-5zHab9d72qQuSkanYORP993HYQws14lhyPBjqaUZrupkivuHxnAhNP9zxoCfeEQAvD_BwE][here]] to go to the BSI webpage.

*ii.* International Organisation for Standardisation (ISO) specific to the subject.

Click [[https://www.iso.org/home.html][here]] to go to the ISO website.
#+END_VERSE

* Assess whether the design solution meets the criteria of the technical specification
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
8.2a Demonstrate an understanding of the methods and importance of undertaken physical testing on a product to ensure it meets the criteria it is meant to fulfil, including:

*i.* functionality.

The functionality of a product can be described as 'The purpose that something is designed or expected to fulfil'.

*ii.* accuracy.

Accuracy has two definitions:

- More commonly, it is a description of systematic errors, a measure of statistical bias; as these cause a difference between a result and a "true" value, ISO calls this trueness.

- Alternatively, ISO defines accuracy as describing a combination of both types of observational error above (random and systematic), so high accuracy requires both high precision and high trueness.

In simplest terms, given a set of data points from repeated measurements of the same quantity, the set can be said to be precise if the values are close to each other, while the set can be said to be accurate if their average is close to the true value of the quantity being measured. The two concepts are independent of each other, so a particular set of data can be said to be either accurate, or precise, or both, or neither.
 
*iii.* performance.

Performance engineering encompasses the techniques applied during a systems development life cycle to ensure the non-functional requirements for performance (such as throughput, latency, or memory usage) will be met. It may be alternatively referred to as systems performance engineering within systems engineering, and software performance engineering or application performance engineering within software engineering.

As the connection between application success and business success continues to gain recognition, particularly in the mobile space, application performance engineering has taken on a preventative and perfective role within the software development life cycle. As such, the term is typically used to describe the processes, people and technologies required to effectively test non-functional requirements, ensure adherence to service levels and optimize application performance prior to deployment.

The term performance engineering encompasses more than just the software and supporting infrastructure, and as such the term performance engineering is preferable from a macro view. Adherence to the non-functional requirements is also validated post-deployment by monitoring the production systems. This is part of IT service management.

Performance engineering has become a separate discipline at a number of large corporations, with tasking separate but parallel to systems engineering. It is pervasive, involving people from multiple organizational units; but predominantly within the information technology organization.

8.2b Recognise how physical testing systems are integrated into the manufacturing process to test functionality.

*i.* Destructive and non destructive testing.

In [[https://en.wikipedia.org/wiki/Destructive_testing][destructive testing ]] (or destructive physical analysis, DPA) tests are carried out to the specimen's failure, in order to understand a specimen's performance or material behaviour under different loads.

[[https://en.wikipedia.org/wiki/Nondestructive_testing][Non-destructive testing]] (NDT) is a wide group of analysis techniques used in science and technology industry to evaluate the properties of a material, component or system without causing damage.

*ii.* Testing materials durability.

It is generally considered a subset of reliability testing. Durability Testing is a Performance testing technique used to determine the characteristics of a system under various load conditions *over time*. This testing helps us to identify the stability of transaction response times over the duration of the test.

*iii.* Testing models and prototypes for performance and fitness purposes.

Model-based testing is an application of model-based design for designing and optionally also executing artifacts to perform software testing or system testing. Models can be used to represent the desired behavior of a system under test (SUT), or to represent testing strategies and a test environment.

*iv.* Testing products in use through different methods.

- Consumer testing is testing or comparative testing, is a process of measuring the properties or performance of products. The theory is that since the advent of mass production manufacturers produce branded products which they assert and advertise to be identical within some technical standard.

- Virtual testing is a process in which your product is tested on various characteristics, such as drop resistance, failure behaviour or deformations. Numerical models are used to verify the performance of the product.


#+END_VERSE

* How do design engineers and manufacturers determine whether design solutions are commercially viable?
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
8.3a Assess design solutions viability.

*- The design solutions impact on user lifestyles.*

Designers aim to prove the viability of new products and show that they will have a positive impact on user lifestyles.

For example, mobile phones have had a large impact on user lifestyles as they have become lighter and able to complete more computational tasks.

These solutions could also have negative impacts on user lifestyles, using the mobile phone example again, fewer people are communicating face-to-face and getting out.

*- How well the product performs.*

Feasibility studies confirming that a product will meet performance standards are vital if the product is to be viable.

Companies want the user to percieve the need for a product and will spend a lot of time and money trying to research user needs and wants through many different forms, such as questionnaires.

*- Technical difficulty of manufacture.*

A major deciding factorin the production of a product is the costs associated with the difficulty of its manufacture.

Designers and manufacturers aim to reduce the costs of manufacturing by adapting and simplifying products to make them easier to produce.

*- Stock availability of materials and components.*

The availability of stock or ease of obtaining materials can have a large impact on the viability of some products.

Studies will need to take place to ensure materials and componets are easily available prior to manufacture. the following problems can occur if this is not done.

1. a material is not available in sufficient quantities or availability is unreliable.
2. it will cost a significant sum to buy in
3. there is a long lead time
4. there is strong competition for the materials or parts.
5. the materials have an impact on sustainability.

*- Costs and profit.*

The need for companies to generate profitmeans that feasability studies to carefully plan cost implications and the ability for a product to make a profit.

Types of costs to consider are:

1. Factory rent/mortgage (fixed)
2. Power (mixed cost)
3. Insurance (Fixed)
4. Wages (Variable costs)
5. Miscellaneous expenses (variable costs)
6. Machinery (fixed)
7. Materials (variable cost)
8. Tooling (variable cost)

*- Timescales involved.*

The timescales involved in bringing a product to market are vitally important. 

A product brought too late to the market where a competitorhas a large market share can mean real problems in gaining sales and could mean a product and all its related investments will not longer be commercially viable. 

Another timescale must be factored into a feasability study is obtaining protection of design ideas through intellectual property rights to ensure ideas can not be stolen.

*- Promotion, brand awareness and advertising potential.*

Marketing often dictates the success of a product and its associated comercial viability.

If consumers are unaware that a product exists, they are unlikely to buy it.

Companies often use brand awareness and brand identity to cross sell products. As a consumer, you are more likely to buy another product from the same company if you have had a positive experience.

[[./img/marketing_mix.jpg]]

*- Balancing supply and demand.*

Keeping demand and supply in balance is a constant struggle. The consequences of poor customer service, high inventories, cash flow difficulties, and failure to meet planned business goals lead companies in search of a process to better manage the delicate balance of demand and supply.

[[./img/supply_demand.jpg]]

*- Market analysis of similar products.* 

During the product development and after its launch, companies often perform a range of feasibility studies looking at other competitor products, sales trends, marketing promotions and opportunities in new markets.

During development stages, market analysis is primarily focused on similar products already available to consumers.

Analysis simply looks at sales trends to show the popularity of a certain product range within a market to determine demand.


*Key terms:*

1. Brand awareness
2. Brand identity
3. Electronic point of sale (EPOS)
4. Feasibility study.
5. Fixed costs.
6. Variable costs.

#+END_VERSE
