#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: Technical Understanding
#+AUTHOR: C. Delport

#+BEGIN_HTML
<div class="github-fork-ribbon-wrapper left">
<div class="github-fork-ribbon">
<a href="https://github.com/stcd11/a_level_de_theory">Fork me on GitHub</a>
</div>
</div>
<center>
<img src='img/ArdunioUNO.jpg' width=20%>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 
* Considerations made about the structural integrity of a design solution
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
6.1a You should understand how and why some materials and/or system components need to be reinforced or stiffened to withstand forces and stresses to fulfil the structural integrity of products.

6.1b Show an understanding of the processes that can be used to ensure the structural integrity of a product, such as: 

i  Triangulation 
ii Reinforcing.

#+END_VERSE
* How mechanisms provide functionality to products and systems
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
6.2a Demonstrate an understanding of the functions that mechanical devices offer to products, providing different types of motion, including:
 
i. rotary
ii. linear
iii. reciprocating
iv. oscillating.

6.2b Demonstrate an understanding of devices and systems that are used to change the magnitude and direction of forces and torques, including:

i. gears, cams, pulleys and belts, levers, linkages, screw threads worm drives, 
chain drives and belt drives
ii. epicyclic gear systems
iii. bearings and lubrication
iv. efficiency in mechanical systems.

#+END_VERSE

* The forces that need consideration to ensure structural and mechanical efficiency
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
6.3a Demonstrate an understanding of static and dynamic forces in structures and how to achieve rigidity, including:

i. tension, compression, torsion and bending
ii. stress, strain and elasticity
iii. mass and weight
iv. rigidity
v. modes of failure. 

#+END_VERSE

* How electronic systems offer functionality to design solutions
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
6.4a Demonstrate an understanding of how electronic systems provide input, control and output process functions, including:

i. switches and sensors, to produce signals in response to a variety of inputs
ii. programmable control devices
iii. signal amplification
iv. devices to produce a variety of outputs including light, sound, motion.

6.4b Demonstrate an understanding of the function of an overall system, referring to aspects, including:

i. passive components: resistors, capacitors, diodes 
ii. inputs: sensors for position, light, temperature, sound, infra-red, force, 
rotation and angle
iii. process control: programmable microcontroller
iv. signal amplification: MOSFET, driver ICs
v. outputs: LED, sounder, solenoid, DC motor, servo motor
vi. analogue and digital signals and conversion between them
vii. open and closed loop systems including feedback in a system and how it 
affects the overall performance
viii. sub-systems and systems thinking.

6.4c Demonstrate an understanding of what can be gained from interfacing electronic circuits with mechanical and pneumatic systems and components, such as:

i  the ability to add electronic control as an input to mechanical or pneunamitc 
output
ii the use of flow restrictors to control cylinder speed
iii  the use of sensors to measure rotational speed, strain/force, distance.

6.4d Demonstrate an understanding of networking and of communication protocols, such as:

i wireless devices, such as: RFID, NFC, Wi-Fi, bluetooth
ii embedded devices
iii smart objects
iv  networking electronic products to exchange information.

6.4e Demonstrate an understanding of the basic principles of electricity, including:

i. voltage
ii. current
iii. ohms law
iv. power

#+END_VERSE

* How programmable devices and smart technologies provide functionality in system design
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

#+BEGIN_VERSE
6.5a Demonstrate an understanding of how smart materials change the functionality of engineered products, such as:

i  colour changes, shape-shifting, motion control, self-cleaning and self-healing. 

6.5b Demonstrate an understanding of how programmable devices are used to add functionality to products, relating to coding of and specific applications of programmable components, such as:

i. how they incorporate enhanced features that can improve the user experience and solve problems in system design
ii. how they use basic techniques for measuring, controlling, storing data and displaying information in practical situations 
iii. electronic prototyping platforms and interated development environments (IDE) for simulation in virtual environments
iv. the use of programmable components and microcontrollers found in products and systems such as robotic arms or cars 
v. creating flowcharts to describe processes and decisions within a process to control input and output components.

#+END_VERSE

